lam_fun = lambda a  : a  + 6
lam_input = 10
lam_output = lam_fun(lam_input)
----------------------------------
# Implement the function after this line
def multiply_all(*args):
    res=1
    for i in args:
        res *= i

    return res
    #print komutunu nasıl fonksiyona eklerim?

test_1 = (1 , 4 , 3 , 10)
multiply_all(test_1)

test_2 = (3 , 5 , 15 , 2)
multiply_all(test_2)

test_3 = (2 , 3 , 8, 4)
multiply_all(test_3)

lst = [11, 22, 33, 44, 55]

iter_lst = iter(lst)
while True:
    try:
        print(iter_lst.__next__())
    except:
        break
-----------------------------
import time

a=list(range(10000))
b=list(range(10000,20000))
start=time.time()
print(a)
print(b)

end=time.time()


start1=time.time()

def gen_f():
    yield a
    yield b
x=gen_f()
print(next(x))
print(next(x))
end1=time.time()
print("time1: ",end1-start1)
print("time: ",end-start)
-------------------------------
import time#0.068 ile 0.018 saniye süreler

a=list(range(10000))
b=list(range(10000,20000))
start=time.time()
print(a+b)

end=time.time()

start1=time.time()

def gen_f():
    yield a
    yield b

print(a+b)

end1=time.time()
print("time1: ",end1-start1)
print("time: ",end-start)
----------------------------
notes = [[name, score]]
# def get_score(notes):
#    return notes.get(score)
notes.sort()
notes.pop(0)
a = notes.count(0)
b = len(notes)
i = 1
while i <= (b - a):
    notes.pop()
    i += 1
b = notes.count(0)

print(notes.sort(key=notes.index(name)))
